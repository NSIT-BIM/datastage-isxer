image: 'node:latest'

workflow:
  rules:
    - if: $CI_PIPELINE_TRIGGERED
      when: always
    - if: $CI_COMMIT_MESSAGEE =~ /wip/
      when: never
    - if:  $CI_COMMIT_TAG
      when: always
    - if: $CI_COMMIT_MESSAGE =~ /ci/ && $CI_COMMIT_MESSAGE  =~ /force/
      when: always
    - if: $CI_COMMIT_MESSAGE =~ /ci/
      when: never   
    - if: $CI_COMMIT_MESSAGE =~ /fix/ || $CI_COMMIT_MESSAGE =~ /evol/ || $CI_COMMIT_MESSAGE =~ /major/ 
      when: always   
    - when: never

stages:
  - build
  - release

cache:
  paths:
    - node_modules/

build:
  stage: build
  variables:
    GITLAB_TOKEN: $CI_API_TOKEN
  before_script:
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/npm @semantic-release/gitlab-config conventional-changelog-conventionalcommits
    - git remote set-url origin https://$GIT_CI_USER:$CI_API_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "gitlab runner"
  script:
    - semantic-release
    - npm install -g pkg
    - npm install
    - pkg . -t node12-linux-x64 -o isxer
    - git add package.json
    - "git commit -m 'ci(package.json): bump version'"
    - git push origin HEAD:master
    - git push --delete origin v$(npm --loglevel silent run version ) 
  artifacts:
    expire_in: 30 days
    paths:
      - isxer
  only:
    - master

release:
  stage: release
  variables:
    GITLAB_TOKEN: $CI_API_TOKEN
  before_script:
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/npm @semantic-release/gitlab-config conventional-changelog-conventionalcommits
    - git remote set-url origin https://$GIT_CI_USER:$CI_API_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "gitlab runner"
  script:
    - git pull origin master
    - cat $SEM_RELEASE_OPTIONS > .releaserc
    - semantic-release -e @semantic-release/gitlab-config
  only:
    - master


docker:
  stage: release
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:${CI_COMMIT_TAG}" .
    - docker push "$CI_REGISTRY_IMAGE:${CI_COMMIT_TAG}"
  only:
    - tags
